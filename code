#include <stdio.h>
#include <string.h>

#define MAX_TUTORS 100
#define MAX_NAME_LENGTH 50
#define MAX_SUBJECT_LENGTH 30

struct Tutor {
    char name[MAX_NAME_LENGTH];
    char subject[MAX_SUBJECT_LENGTH];
    float hourly_rate;
    int available;
    char studentName[MAX_NAME_LENGTH];
};

void readTutorsData(struct Tutor tutors[], int *numTutors) {
    FILE *file = fopen("teachers_database.txt", "r");
    if (file == NULL) {
        printf("Помилка відкриття файлу.\n");
        return;
    }

    while (*numTutors < MAX_TUTORS && fscanf(file, "%[^,],%[^,],%f,%d,%[^\n]\n", tutors[*numTutors].name, tutors[*numTutors].subject, &tutors[*numTutors].hourly_rate, &tutors[*numTutors].available, tutors[*numTutors].studentName) == 5) {
        (*numTutors)++;
    }

    fclose(file);
}

void displayAvailableTutors(struct Tutor tutors[], int numTutors, const char *subject) {
    printf("\nДоступні викладачі для предмету '%s':\n", subject);
    printf("-------------------------------------------------------\n");
    printf("%-20s%-20s%-15s%-15s\n", "Ім'я", "Предмет", "Ціна за заняття", "Доступність");
    printf("-------------------------------------------------------\n");

    int availableTutors = 0;
    for (int i = 0; i < numTutors; i++) {
        if (tutors[i].available && strcmp(tutors[i].subject, subject) == 0) {
            printf("%-20s%-20s%-15.2f%-15s\n", tutors[i].name, tutors[i].subject, tutors[i].hourly_rate, "Доступний");
            availableTutors++;
        }
    }

    if (availableTutors == 0) {
        printf("Немає доступних викладачів для даного предмету.\n");
    }

    printf("-------------------------------------------------------\n");
}

void bookTutor(struct Tutor tutors[], int numTutors, const char *studentName) {
    char subject[MAX_SUBJECT_LENGTH];
    printf("\n%s, введіть предмет, для якого ви хочете записатися на заняття: ", studentName);
    scanf("%s", subject);

    int found = 0;
    for (int i = 0; i < numTutors; i++) {
        if (tutors[i].available && strcmp(tutors[i].subject, subject) == 0) {
            printf("\nВи успішно записалися на заняття з предмету '%s' із викладачем %s за ціною %.2f грн.\n", subject, tutors[i].name, tutors[i].hourly_rate);
            tutors[i].available = 0;
            strcpy(tutors[i].studentName, studentName);
            found = 1;
            break;
        }
    }

    if (!found) {
        printf("\nНа жаль, немає доступних викладачів для предмету '%s'. Спробуйте інший предмет.\n", subject);
    }
}

void viewStudentSchedule(struct Tutor tutors[], int numTutors, const char *studentName) {
    printf("\nВаш розклад занять, %s:\n", studentName);
    printf("-------------------------------------------------------\n");
    printf("%-20s%-20s%-15s\n", "Ім'я викладача", "Предмет", "Ціна за заняття");
    printf("-------------------------------------------------------\n");

    int hasSchedule = 0;
    for (int i = 0; i < numTutors; i++) {
        if (!tutors[i].available && strcmp(tutors[i].studentName, studentName) == 0) {
            printf("%-20s%-20s%-15.2f\n", tutors[i].name, tutors[i].subject, tutors[i].hourly_rate);
            hasSchedule = 1;
        }
    }

    if (!hasSchedule) {
        printf("Ви не записані на жодне заняття.\n");
    }

    printf("-------------------------------------------------------\n");
}

int main() {
    struct Tutor tutors[MAX_TUTORS];
    int numTutors = 0;
    int choice;
    char studentName[MAX_NAME_LENGTH];

    readTutorsData(tutors, &numTutors);

    printf("Вітаємо у Сервісі пошуку репетиторів!\n");

    printf("Будь ласка, введіть ваше ім'я: ");
    scanf("%s", studentName);

    while (1) {
        printf("\nОберіть опцію:\n");
        printf("1. Показати доступних викладачів за певним предметом\n");
        printf("2. Записатися на заняття\n");
        printf("3. Переглянути ваш розклад занять\n");
        printf("4. Вийти з програми\n");

        scanf("%d", &choice);

        switch (choice) {
            case 1:
                char subject[MAX_SUBJECT_LENGTH];
                printf("\nВведіть предмет, за яким ви хочете знайти викладачів: ");
                scanf("%s", subject);
                displayAvailableTutors(tutors, numTutors, subject);
                break;
            case 2:
                bookTutor(tutors, numTutors, studentName);
                break;
            case 3:
                viewStudentSchedule(tutors, numTutors, studentName);
                break;
            case 4:
                FILE *file = fopen("teachers_database.txt", "r");
                if (file == NULL) {
                    printf("Помилка відкриття файлу.\n");
                    return 1;
                }

                for (int i = 0; i < numTutors; i++) {
                    fprintf(file, "%s,%s,%.2f,%d,%s\n", tutors[i].name, tutors[i].subject, tutors[i].hourly_rate, tutors[i].available, tutors[i].studentName);
                }

                fclose(file);

                printf("Дякуємо за користування Сервісом пошуку репетиторів, %s! До зустрічі!\n", studentName);
                return 0;
            default:
                printf("Некоректний вибір. Спробуйте ще раз.\n");
        }
    }

    return 0;
}
